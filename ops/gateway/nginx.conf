user       www-data www-data;
worker_processes  5;
worker_rlimit_nofile 8192;

events {
  worker_connections  4096;  ## Default: 1024
}

http {
  include    /etc/nginx/mime.types;
  include    /etc/nginx/proxy.conf;
  include    /etc/nginx/fastcgi.conf;
  index    index.html index.htm index.php;

  default_type application/octet-stream;
  log_format   main '$remote_addr [$http_account_id] - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
  access_log   logs/access.log  main;
  sendfile     on;
  tcp_nopush   on;
  server_names_hash_bucket_size 128;

   limit_req_zone $http_account_id zone=varcaapi:10m rate=30r/s;

  server { # reverse proxy for kibana, in production it should go away
    listen       5600;
    access_log   /var/log/nginx/kibana.access.log  main;

    auth_basic "Restricted Access";
    auth_basic_user_file /etc/nginx/htpasswd.users;

    location / {
        proxy_pass http://localhost:5601;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
  }

  server {
    listen          80;
    server_name     varca-dev.mapping.vervotech.com;
    access_log      /var/log/nginx/varca-dev.server.access.log main;
    error_log      /var/log/nginx/varca-dev.server.error.log;

    if ($http_account_id !~* "([^;]+)(?:;|$)") {
        return 403;
    }
    if ($http_account_id = "") {
        return 403;
    }

    limit_req zone=varcaapi burst=12 delay=8;
    limit_req_status 444;

    location ^~ / {
        return 404;
    }

    location /api/v1/place {
        proxy_pass      http://localhost:8081;
        proxy_pass_request_headers on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api/v1/geo/search {
        proxy_pass      http://localhost:8080;
        proxy_pass_request_headers on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

     location /api/v1/geo/pit {
        proxy_pass      http://localhost:8082;
        proxy_pass_request_headers on;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    location /api/v1/content {
        return 501;
    }
  }
}